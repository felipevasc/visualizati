<!DOCTYPE html>
<html lang="pt-BR">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>VisualizATI</title>
    
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700;800&display=swap" rel="stylesheet">
    
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz" crossorigin="anonymous" defer></script>
    <script src="https://cdn.jsdelivr.net/npm/chart.js@4.4.3/dist/chart.umd.min.js" defer></script>

    <style>
        :root {
            --gov-blue: #0066CC;
            --gov-green: #008000;
            --gov-blue-light: #E6F0FA;
            --danger-color: #DC3545;
            --success-color: #198754;
            --bg-light: #f8f9fa;
            --text-primary: #212529;
            --text-secondary: #6c757d;
            --border-color: #dee2e6;
            --card-shadow: 0 4px 6px rgba(0, 0, 0, 0.04), 0 1px 3px rgba(0, 0, 0, 0.08);
            --card-hover-shadow: 0 7px 14px rgba(0, 0, 0, 0.06), 0 3px 6px rgba(0, 0, 0, 0.1);
            --font-family-sans-serif: 'Inter', sans-serif;
        }

        html {
            font-size: 16.5px;
        }

        body {
            background-color: var(--bg-light);
            color: var(--text-primary);
            font-family: var(--font-family-sans-serif);
            -webkit-font-smoothing: antialiased;
            -moz-osx-font-smoothing: grayscale;
        }

        h1, h2, h3, h4, h5, h6 {
            font-weight: 700;
            color: var(--text-primary);
        }
        .header-title {
            color: var(--gov-blue);
            font-weight: 800;
        }
        .header-subtitle {
            color: var(--text-secondary);
            font-size: 1.1rem;
            max-width: 800px;
        }
        
        .card {
            border: 1px solid var(--border-color);
            border-radius: 12px;
            box-shadow: var(--card-shadow);
            transition: all 0.25s ease-in-out;
            background-color: #fff;
        }
        .card:hover {
            transform: translateY(-4px);
            box-shadow: var(--card-hover-shadow);
        }
        .card-header {
            background-color: transparent;
            border-bottom: 1px solid var(--border-color);
            padding: 1.25rem 1.5rem;
        }
        .card-header h2 {
            font-size: 1.3rem;
            margin: 0;
        }
        .stat-card .display-4 {
            color: var(--gov-blue);
            font-weight: 800;
        }

        .table {
            --bs-table-border-color: var(--border-color);
            --bs-table-hover-bg: var(--gov-blue-light);
            color: var(--text-primary);
            border-collapse: separate;
            border-spacing: 0;
        }
        .table > thead {
            color: var(--text-secondary);
            font-size: 0.85rem;
            text-transform: uppercase;
            letter-spacing: 0.5px;
            font-weight: 600;
        }
        .table th, .table td {
            vertical-align: middle;
            padding: 1rem 1.2rem;
            font-size: 0.98rem;
        }
        .table-hover > tbody > tr {
            transition: background-color 0.2s ease;
        }
        .expandable-row {
            cursor: pointer;
        }
        .indicator {
            transition: transform 0.3s cubic-bezier(0.25, 0.1, 0.25, 1);
            display: inline-block;
            width: 1em;
            height: 1em;
            background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16' fill='%236c757d'%3e%3cpath fill-rule='evenodd' d='M4.646 1.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1 0 .708l-6 6a.5.5 0 0 1-.708-.708L10.293 8 4.646 2.354a.5.5 0 0 1 0-.708z'/%3e%3c/svg%3e");
            background-repeat: no-repeat;
            background-position: center;
        }
        .expandable-row[aria-expanded="true"] .indicator {
            transform: rotate(90deg);
        }
        .details-cell {
            padding: 0 !important;
            border: 0;
            background-color: var(--bg-light);
        }
        .details-content {
            padding: 1.5rem 2rem;
            border-top: 1px solid var(--border-color);
        }
        .cargo-list {
            font-size: 0.9em;
            line-height: 1.6;
            color: var(--text-secondary);
        }
        .cargo-list strong {
            color: var(--text-primary);
            font-weight: 600;
        }
        
        .text-success { color: var(--success-color) !important; font-weight: 600; }
        .text-danger { color: var(--danger-color) !important; font-weight: 600; }
        .badge.bg-info {
            background-color: var(--gov-blue-light) !important;
            color: var(--gov-blue) !important;
            font-weight: 600;
            font-size: 0.9em;
        }
    </style>
</head>
<body>
    <div class="container-fluid my-5 px-4">

        <div class="row mb-5">
            <div class="col-md-12">
                <div class="card stat-card text-center p-4">
                    <h4 class="text-secondary fw-normal mb-2">Analisados (maio/2025)</h4>
                    <p class="display-4"><%= totalServidores %></p>
                </div>
            </div>
        </div>

        <div class="card mb-5">
            <div class="card-header">
                <h2>Estrutura por Órgão de Exercício</h2>
            </div>
            <div class="card-body p-0">
                <div class="table-responsive">
                    <table class="table table-hover align-middle mb-0">
                        <thead>
                            <tr>
                                <th scope="col" class="text-center" style="width: 5%;"></th>
                                <th scope="col" style="width: 30%;">Órgão</th>
                                <th scope="col" class="text-center">Servidores</th>
                                <th scope="col" class="text-end">Média Salarial</th>
                                <th scope="col" class="text-end">Maior Salário</th>
                                <th scope="col" class="text-end">Menor Salário</th>
                                <th>Cargos</th>
                            </tr>
                        </thead>
                        <tbody>
                            <% dadosOrgaos.forEach((orgao, index) => { %>
                                <tr class="expandable-row" data-bs-toggle="collapse" data-bs-target="#orgao-<%= index %>" aria-expanded="false" aria-controls="orgao-<%= index %>">
                                    <td class="text-center"><span class="indicator"></span></td>
                                    <td><span class="fw-medium"><%= orgao.nome %></span></td>
                                    <td class="text-center"><span><%= orgao.quantidade %></span></td>
                                    <td class="text-end"><%= formatarMoeda(orgao.mediaSalarial) %></td>
                                    <td class="text-end text-success"><%= formatarMoeda(orgao.maiorSalario) %></td>
                                    <td class="text-end text-danger"><%= formatarMoeda(orgao.menorSalario) %></td>
                                    <td class="cargo-list">
                                        <% Object.entries(orgao.cargos).sort((a,b) => b[1] - a[1]).forEach(([cargo, qtd]) => { %>
                                            <span><%= cargo %>: <strong><%= qtd %></strong></span><br>
                                        <% }); %>
                                    </td>
                                </tr>
                                <tr class="collapse" id="orgao-<%= index %>">
                                    <td colspan="7" class="details-cell">
                                        <div class="details-content">
                                            <h4 class="mb-3 fs-6 text-secondary">Detalhes por Unidade (UORG)</h4>
                                            <table class="table table-sm nested-table mb-0">
                                                <tbody>
                                                    <% orgao.uorgs.forEach((uorg, uIndex) => { %>
                                                        <tr class="expandable-row" data-bs-toggle="collapse" data-bs-target="#uorg-<%= index %>-<%= uIndex %>" aria-expanded="false">
                                                            <td style="width: 5%;" class="text-center"><span class="indicator"></span></td>
                                                            <td style="width: 25%;" class="fw-medium"><%= uorg.nome %></td>
                                                            <td class="text-center"><%= uorg.quantidade %></td>
                                                            <td class="text-end"><%= formatarMoeda(uorg.mediaSalarial) %></td>
                                                            <td class="text-end text-success"><%= formatarMoeda(uorg.maiorSalario) %></td>
                                                            <td class="text-end text-danger"><%= formatarMoeda(uorg.menorSalario) %></td>
                                                            <td class="cargo-list">
                                                                <% Object.entries(uorg.cargos).sort((a,b) => b[1] - a[1]).slice(0, 2).forEach(([cargo, qtd]) => { %>
                                                                    <span><%= cargo %>: <strong><%= qtd %></strong></span><br>
                                                                <% }); %>
                                                            </td>
                                                        </tr>
                                                        <tr class="collapse" id="uorg-<%= index %>-<%= uIndex %>">
                                                            <td colspan="7" class="details-cell">
                                                                <div class="details-content" style="padding-left: 4rem; background-color: #fff;">
                                                                    <table class="table table-sm table-striped nested-table-2 mb-0">
                                                                        <thead>
                                                                            <tr>
                                                                                <th>Nome</th>
                                                                                <th>Cargo</th>
                                                                                <th>Jornada</th>
                                                                                <th>Ingresso Cargo</th>
                                                                                <th>Ingresso Órgão</th>
                                                                                <th class="text-end">Salário</th>
                                                                            </tr>
                                                                        </thead>
                                                                        <tbody>
                                                                            <% uorg.servidores.forEach(servidor => { %>
                                                                            <tr>
                                                                                <td><%= servidor.NOME %></td>
                                                                                <td><%= servidor.CLASSE_CARGO %>-<%= servidor.PADRAO_CARGO %></td>
                                                                                <td><%= servidor.JORNADA_DE_TRABALHO %></td>
                                                                                <td><%= servidor.DATA_INGRESSO_CARGOFUNCAO %></td>
                                                                                <td><%= servidor.DATA_INGRESSO_ORGAO %></td>
                                                                                <td class="text-end fw-medium"><%= formatarMoeda(servidor.remuneracaoBruta) %></td>
                                                                            </tr>
                                                                            <% }); %>
                                                                        </tbody>
                                                                    </table>
                                                                </div>
                                                            </td>
                                                        </tr>
                                                    <% }); %>
                                                </tbody>
                                            </table>
                                        </div>
                                    </td>
                                </tr>
                            <% }); %>
                        </tbody>
                    </table>
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-lg-12 mb-4">
                 <div class="card h-100">
                    <div class="card-header">
                        <h2>Agrupamento por Cargo</h2>
                    </div>
                    <div class="card-body p-0">
                         <div class="table-responsive">
                            <table class="table table-hover align-middle mb-0">
                                <thead>
                                    <tr>
                                        <th style="width: 5%;" class="text-center"></th>
                                        <th>Cargo (Classe-Padrão)</th>
                                        <th class="text-center">Qtd</th>
                                        <th class="text-end">Média</th>
                                        <th class="text-end">Maior</th>
                                        <th class="text-end">Menor</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    <% dadosCargos.forEach((cargo, index) => { %>
                                        <tr class="expandable-row" data-bs-toggle="collapse" data-bs-target="#cargo-<%= index %>" aria-expanded="false">
                                            <td class="text-center"><span class="indicator"></span></td>
                                            <td class="fw-medium"><%= cargo.descricao %></td>
                                            <td class="text-center"><span class="badge bg-info rounded-pill"><%= cargo.quantidade %></span></td>
                                            <td class="text-end"><%= formatarMoeda(cargo.mediaSalarial) %></td>
                                            <td class="text-end text-success"><%= formatarMoeda(cargo.maiorSalario) %></td>
                                            <td class="text-end text-danger"><%= formatarMoeda(cargo.menorSalario) %></td>
                                        </tr>
                                        <tr class="collapse" id="cargo-<%= index %>">
                                            <td colspan="6" class="details-cell">
                                                <div class="details-content">
                                                    <table class="table table-sm table-striped nested-table mb-0">
                                                        <thead>
                                                            <tr>
                                                                <th>Nome</th>
                                                                <th>Órgão de Exercício</th>
                                                                <th class="text-end">Remuneração Bruta</th>
                                                            </tr>
                                                        </thead>
                                                        <tbody>
                                                            <% cargo.servidores.sort((a,b) => b.remuneracaoBruta - a.remuneracaoBruta).forEach(servidor => { %>
                                                            <tr>
                                                                <td><%= servidor.NOME %></td>
                                                                <td><%= servidor.ORG_EXERCICIO %></td>
                                                                <td class="text-end fw-medium"><%= formatarMoeda(servidor.remuneracaoBruta) %></td>
                                                            </tr>
                                                            <% }); %>
                                                        </tbody>
                                                    </table>
                                                </div>
                                            </td>
                                        </tr>
                                    <% }); %>
                                </tbody>
                            </table>
                         </div>
                    </div>
                 </div>
            </div>
            </div>
            <div class="row" style="min-height: 800px;">
             <div class="col-lg-12 mb-5">
                 <div class="card h-100">
                     <div class="card-header">
                        <h2>Remuneração bruta</h2>
                     </div>
                     <div class="card-body d-flex align-items-center justify-content-center p-4">
                        <canvas id="graficoDispersao"></canvas>
                     </div>
                 </div>
             </div>
        </div>
    </div>

    <script>
    document.addEventListener("DOMContentLoaded", function() {
        if (typeof Chart === 'undefined') {
            return;
        }
        const dadosDispersao = <%- JSON.stringify(dadosDispersao) %>;

        const style = getComputedStyle(document.documentElement);
        const primaryColor = style.getPropertyValue('--gov-blue').trim();
        const primaryColorTransparent = 'rgba(0, 102, 204, 0.6)';
        const textColor = style.getPropertyValue('--text-primary').trim();
        const secondaryTextColor = style.getPropertyValue('--text-secondary').trim();
        const gridColor = style.getPropertyValue('--border-color').trim();
        const cardBg = '#FFFFFF';

        const ctx = document.getElementById('graficoDispersao')?.getContext('2d');
        if (!ctx) return;

        new Chart(ctx, {
            type: 'scatter',
            data: {
                datasets: [{
                    label: 'Remuneração Bruta por Servidor',
                    data: dadosDispersao,
                    backgroundColor: primaryColorTransparent,
                    borderColor: primaryColor,
                    pointRadius: 5,
                    pointHoverRadius: 8,
                    pointHoverBorderColor: '#fff',
                    pointHoverBorderWidth: 2
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                plugins: {
                    legend: { display: false },
                    title: {
                        display: true,
                        text: '',
                        font: { size: 16, weight: '600', family: "'Inter', sans-serif" },
                        color: textColor,
                        padding: { top: 10, bottom: 25 }
                    },
                    tooltip: {
                        enabled: true,
                        backgroundColor: cardBg,
                        titleColor: textColor,
                        bodyColor: secondaryTextColor,
                        borderColor: gridColor,
                        borderWidth: 1,
                        padding: 12,
                        displayColors: false,
                        titleFont: { weight: 'bold', family: "'Inter', sans-serif" },
                        bodyFont: { family: "'Inter', sans-serif" },
                        callbacks: {
                            label: function(context) {
                                const dp = context.raw;
                                return [
                                    `Servidor: ${dp.servidor}`,
                                    `Cargo: ${dp.cargo}`,
                                    `Salário: ${new Intl.NumberFormat('pt-BR', { style: 'currency', currency: 'BRL' }).format(dp.y)}`
                                ];
                            },
                            title: function() { return ''; }
                        }
                    }
                },
                scales: {
                    x: {
                        title: { 
                            display: true, 
                            text: 'Servidor', 
                            color: secondaryTextColor,
                            font: { weight: '500', family: "'Inter', sans-serif", size: 14 }
                        },
                        grid: { color: gridColor },
                        ticks: { color: secondaryTextColor, font: { family: "'Inter', sans-serif" } }
                    },
                    y: {
                        title: { 
                            display: true, 
                            text: 'Bruto', 
                            color: secondaryTextColor,
                            font: { weight: '500', family: "'Inter', sans-serif", size: 14 }
                        },
                        ticks: {
                            color: secondaryTextColor,
                            font: { family: "'Inter', sans-serif" },
                            callback: value => new Intl.NumberFormat('pt-BR', { style: 'currency', currency: 'BRL', minimumFractionDigits: 0 }).format(value)
                        },
                        grid: { color: gridColor }
                    }
                }
            }
        });
    });
    </script>
</body>
</html>