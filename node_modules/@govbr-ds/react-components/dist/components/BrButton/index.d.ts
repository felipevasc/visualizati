import { ClearBlock } from '../../types/layout';
import { default as React, ReactNode } from 'react';
import { default as IMtProps } from '../../types/IMtProps';

export interface BrButtonProps extends React.HTMLAttributes<HTMLButtonElement>, IMtProps {
    /**
     * Conteúdo do botão (texto, imagem, etc).
     */
    children?: ReactNode;
    /**
     * Se o botão é do tipo "Primário".
     */
    primary?: boolean;
    /**
     * Se o botão é do tipo "Secundário".
     */
    secondary?: boolean;
    /**
     * Se o botão é circular.
     */
    circle?: boolean;
    /**
     *  Se o botão é do tipo "Fechar".
     */
    close?: boolean;
    /**
     *  Se o botão tem cor invertida.
     */
    inverted?: boolean;
    /**
     *  Se o botão ocupa uma linha inteira.
     */
    block?: boolean;
    /**
     *  Definição responsiva se o botão ocupa uma linha inteira.
     */
    clearBlock?: ClearBlock;
    /**
     *  Tamanho do botão.
     */
    size?: "small" | "large";
    /**
     *  Se o botão tem a propriedade "loading".
     */
    loading?: boolean;
    /**
     *  Se o botão está desabilitado.
     */
    disabled?: boolean;
    /**
     *  Classe de ícone FontAwesome para o botão.
     */
    icon?: string;
    /**
     *  Tipo do botão.
     */
    type?: "button" | "submit" | "reset";
    /**
     *  Se o botão é do tipo Sign-In, especificamente para o botão de logar
     */
    signIn?: boolean;
    /**
     *  Se é um botão do tipo "br-item"
     */
    isItem?: boolean;
    /**
     *  Função disparada ao clicar no botão.
     */
    onClick?: (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void;
    /**
     *  Itens de dropdown, caso seja um botão com dropdown
     */
    dropdownItems?: React.ReactNode;
}
declare const BrButton: React.ForwardRefExoticComponent<BrButtonProps & React.RefAttributes<HTMLButtonElement>>;
export default BrButton;
